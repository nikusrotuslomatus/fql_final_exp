#!/usr/bin/env python3
"""
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Tesla T4 16GB
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ 16GB –ø–∞–º—è—Ç–∏
- –£–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤ 10-12 —á–∞—Å–æ–≤
- –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —É—Ç–∏–ª–∏–∑–∞—Ü–∏—è GPU
"""

import subprocess
import os
import time
import json
from pathlib import Path

def get_tesla_t4_config():
    """–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Tesla T4 16GB"""
    return {
        # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è 10-12 —á–∞—Å–æ–≤
        'offline_steps': 150000,        
        'eval_episodes': 25,            # –ö–æ–º–ø—Ä–æ–º–∏—Å—Å –º–µ–∂–¥—É —Ç–æ—á–Ω–æ—Å—Ç—å—é –∏ –≤—Ä–µ–º–µ–Ω–µ–º
        'eval_interval': 40000,         # –ö–∞–∂–¥—ã–µ 40k —à–∞–≥–æ–≤
        'log_interval': 4000,           # –ß–∞—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        
        # GPU –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è 16GB
        'batch_size': 1024,             # –ë–æ–ª—å—à–æ–π batch –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ GPU
        'actor_hidden_dims': '(512, 512, 512, 512)',  # –ü–æ–ª–Ω–∞—è —Å–µ—Ç—å - –ø–∞–º—è—Ç—å –ø–æ–∑–≤–æ–ª—è–µ—Ç
        'value_hidden_dims': '(512, 512, 512, 512)',
        'flow_steps': 12,               # –•–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
        'kl_num_samples': 8,            # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ KL penalty
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        'use_wandb': True,              # –í–∫–ª—é—á–∞–µ–º wandb –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        'num_seeds': 3,                 # –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        'max_parallel': 1,              # –û–¥–Ω–∞ GPU - –æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å—Å
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è T4
        'mixed_precision': True,        # –ò—Å–ø–æ–ª—å–∑—É–µ–º FP16 –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
        'gradient_accumulation': 1,     # –ë–µ–∑ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è - batch_size –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–π
    }

def estimate_training_time(config):
    """–û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è Tesla T4"""
    steps = config['offline_steps']
    batch_size = config['batch_size']
    
    # –≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∏–µ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è Tesla T4
    # ~100 steps/min –ø—Ä–∏ batch_size=1024
    steps_per_minute = 100 * (batch_size / 1024)
    
    total_minutes = steps / steps_per_minute
    hours = total_minutes / 60
    
    return {
        'total_steps': steps,
        'estimated_hours': hours,
        'estimated_minutes': total_minutes,
        'fits_in_12h': hours <= 12
    }

def get_memory_usage_estimate(config):
    """–û—Ü–µ–Ω–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏ GPU"""
    batch_size = config['batch_size']
    hidden_size = 512  # –ò–∑ actor_hidden_dims
    layers = 4
    
    # –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–∞–º—è—Ç–∏ (–≤ GB)
    model_memory = 0.5  # –ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å
    batch_memory = (batch_size * hidden_size * layers * 4) / (1024**3)  # FP32
    gradient_memory = model_memory * 2  # –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä
    
    total_memory = model_memory + batch_memory + gradient_memory
    
    return {
        'model_memory_gb': model_memory,
        'batch_memory_gb': batch_memory,
        'gradient_memory_gb': gradient_memory,
        'total_memory_gb': total_memory,
        'memory_utilization': (total_memory / 16) * 100
    }

def create_optimized_experiment_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –Ω–∞ T4"""
    config = get_tesla_t4_config()
    
    script_content = f'''#!/bin/bash
# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –¥–ª—è Tesla T4 16GB
# 9 —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤: 3 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ √ó 3 —Å—Ä–µ–¥—ã
# –£—Ç–∏–ª–∏–∑–∞—Ü–∏—è GPU: ~80-90%

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ 9 —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –¥–ª—è Tesla T4 (3 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ √ó 3 —Å—Ä–µ–¥—ã)"
echo "================================================================"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
OFFLINE_STEPS={config['offline_steps']}
EVAL_EPISODES={config['eval_episodes']}
EVAL_INTERVAL={config['eval_interval']}
LOG_INTERVAL={config['log_interval']}
BATCH_SIZE={config['batch_size']}
FLOW_STEPS={config['flow_steps']}
KL_SAMPLES={config['kl_num_samples']}
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
RESULTS_DIR="tesla_t4_9exp_${{TIMESTAMP}}"
mkdir -p "$RESULTS_DIR"

echo "üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞:"
echo "  –®–∞–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è: ${{OFFLINE_STEPS:,}}"
echo "  Batch size: $BATCH_SIZE"
echo "  –í—Å–µ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤: 9"
echo "  –û—Ü–µ–Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è: 6-8 —á–∞—Å–æ–≤"
echo "  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤: $RESULTS_DIR"
echo ""

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞
run_experiment() {{
    local env_name=$1
    local config_name=$2
    local config_args=$3
    local group_name=$4
    
    echo "üß™ –ó–∞–ø—É—Å–∫: $env_name | $config_name"
    
    python main.py \\
        --env_name="$env_name" \\
        --offline_steps=$OFFLINE_STEPS \\
        --online_steps=0 \\
        --seed=0 \\
        --run_group="$group_name" \\
        --eval_episodes=$EVAL_EPISODES \\
        --eval_interval=$EVAL_INTERVAL \\
        --log_interval=$LOG_INTERVAL \\
        --use_wandb=true \\
        --config_name="$config_name" \\
        --agent.batch_size=$BATCH_SIZE \\
        --agent.flow_steps=$FLOW_STEPS \\
        --agent.kl_num_samples=$KL_SAMPLES \\
        --agent.actor_hidden_dims="(512, 512, 512, 512)" \\
        --agent.value_hidden_dims="(512, 512, 512, 512)" \\
        $config_args \\
        > "$RESULTS_DIR/${{env_name}}_${{config_name}}.log" 2>&1
    
    echo "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω: $env_name | $config_name"
}}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
declare -A CONFIGS=(
    ["1_baseline"]="--agent.kl_coeff=0.0 --agent.advantage_weighted=false"
    ["2_kl_only"]="--agent.kl_coeff=0.3 --agent.advantage_weighted=false"
    ["3_kl_awfm"]="--agent.kl_coeff=0.3 --agent.advantage_weighted=true --agent.adv_weight_coeff=1.0"
)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥ —Å –∏—Ö —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
declare -A ENVIRONMENTS=(
    ["antmaze-large-play-v2"]="--agent.alpha=3 --agent.q_agg=min"
    ["puzzle-3x3-play-singletask-v0"]="--agent.alpha=300"
    ["humanoidmaze-medium-navigate-singletask-v0"]="--agent.alpha=100 --agent.discount=0.995"
)

echo "üî¨ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã..."
echo ""

# –°—á–µ—Ç—á–∏–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
experiment_count=0

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
for env_name in "${{!ENVIRONMENTS[@]}}"; do
    env_args="${{ENVIRONMENTS[$env_name]}}"
    
    echo "üéØ –°—Ä–µ–¥–∞: $env_name"
    echo "   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: $env_args"
    
    for config_name in "${{!CONFIGS[@]}}"; do
        config_args="${{CONFIGS[$config_name]}}"
        group_name="T4_9Exp_${{TIMESTAMP}}"
        
        ((experiment_count++))
        echo "   [$experiment_count/9] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $config_name"
        
        # –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        full_config="$config_args $env_args"
        
        run_experiment "$env_name" "$config_name" "$full_config" "$group_name"
        
        echo ""
    done
    
    echo "‚úÖ –°—Ä–µ–¥–∞ $env_name –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    echo ""
done

echo ""
echo "üéâ –í—Å–µ 9 —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $RESULTS_DIR"
echo "üîç –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python analyze_tesla_9exp_results.py $RESULTS_DIR"
'''
    
    with open('fql/run_tesla_t4_9experiments.sh', 'w') as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod('fql/run_tesla_t4_9experiments.sh', 0o755)
    
    return script_content

def print_t4_optimization_summary():
    """–í—ã–≤–æ–¥–∏—Ç —Å–≤–æ–¥–∫—É –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è Tesla T4"""
    config = get_tesla_t4_config()
    time_est = estimate_training_time(config)
    memory_est = get_memory_usage_estimate(config)
    
    print("üéØ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø TESLA T4 16GB")
    print("=" * 50)
    
    print(f"üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è:")
    print(f"  –®–∞–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è: {config['offline_steps']:,}")
    print(f"  Batch size: {config['batch_size']}")
    print(f"  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {config['actor_hidden_dims']}")
    print(f"  Flow steps: {config['flow_steps']}")
    print(f"  KL samples: {config['kl_num_samples']}")
    
    print(f"\n‚è±Ô∏è  –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏:")
    print(f"  –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: {time_est['estimated_hours']:.1f} —á–∞—Å–æ–≤")
    print(f"  –£–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤ 12—á: {'‚úÖ –î–∞' if time_est['fits_in_12h'] else '‚ùå –ù–µ—Ç'}")
    
    print(f"\nüíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:")
    print(f"  –ú–æ–¥–µ–ª—å: {memory_est['model_memory_gb']:.1f} GB")
    print(f"  Batch: {memory_est['batch_memory_gb']:.1f} GB") 
    print(f"  –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã: {memory_est['gradient_memory_gb']:.1f} GB")
    print(f"  –û–±—â–µ–µ: {memory_est['total_memory_gb']:.1f} GB")
    print(f"  –£—Ç–∏–ª–∏–∑–∞—Ü–∏—è: {memory_est['memory_utilization']:.1f}%")
    
    print(f"\nüöÄ –û–∂–∏–¥–∞–µ–º—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:")
    print(f"  –£—Ç–∏–ª–∏–∑–∞—Ü–∏—è GPU: —Å 7% –¥–æ 80-90%")
    print(f"  –°–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è: –≤ 10-12 —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ")
    print(f"  –ö–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ–ª—å—à–µ–º—É batch")
    
    print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print(f"  - –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GPU: python monitor_gpu.py monitor")
    print(f"  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç: bash run_tesla_t4_experiments.sh")
    print(f"  - –ï—Å–ª–∏ –ø–∞–º—è—Ç—å –ø–µ—Ä–µ–ø–æ–ª–Ω—è–µ—Ç—Å—è, —É–º–µ–Ω—å—à–∏—Ç–µ batch_size –¥–æ 768")

if __name__ == "__main__":
    print_t4_optimization_summary()
    
    print(f"\nüõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞...")
    create_optimized_experiment_script()
    print(f"‚úÖ –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: run_tesla_t4_9experiments.sh")
    
    print(f"\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞:")
    print(f"  cd fql")
    print(f"  bash run_tesla_t4_9experiments.sh") 