#!/usr/bin/env python3
"""
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è —Å–ª–∞–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —É—Ç–∏–ª–∏–∑–∞—Ü–∏–µ–π GPU
- –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π batch_size –¥–ª—è –ª—É—á—à–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ GPU
- –°–æ–∫—Ä–∞—â–µ–Ω–æ –¥–æ 100k –∏—Ç–µ—Ä–∞—Ü–∏–π 
- –¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã
- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
"""

import subprocess
import os
import time
import json
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Å–ª–∞–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
SERVER_CONFIG = {
    'offline_steps': 100000,  # –°–æ–∫—Ä–∞—â–µ–Ω–æ —Å 500k –¥–æ 100k
    'eval_episodes': 20,      # –°–æ–∫—Ä–∞—â–µ–Ω–æ —Å 50 –¥–æ 20
    'eval_interval': 25000,   # –ö–∞–∂–¥—ã–µ 25k –≤–º–µ—Å—Ç–æ 50k
    'log_interval': 5000,     # –ö–∞–∂–¥—ã–µ 5k –≤–º–µ—Å—Ç–æ 10k
    'batch_size': 512,        # –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 256 –¥–æ 512 –¥–ª—è –ª—É—á—à–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ GPU
    'num_seeds': 2,           # –¢–æ–ª—å–∫–æ 2 —Å–∏–¥–∞ –≤–º–µ—Å—Ç–æ 3
    'max_parallel': 1,        # –¢–æ–ª—å–∫–æ 1 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
}

def get_gpu_optimized_config():
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è GPU"""
    return {
        'batch_size': 512,           # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π batch –¥–ª—è GPU
        'actor_hidden_dims': '(512, 512, 512)',  # –ú–µ–Ω—å—à–µ —Å–ª–æ–µ–≤ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
        'value_hidden_dims': '(512, 512, 512)',
        'flow_steps': 10,            # –ú–µ–Ω—å—à–µ —à–∞–≥–æ–≤ flow –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        'kl_num_samples': 6,         # –ú–µ–Ω—å—à–µ —Å—ç–º–ø–ª–æ–≤ –¥–ª—è KL
    }

def run_experiment(env_name, config_name, config_args, seed, exp_group):
    """–ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞"""
    print(f"üß™ –ó–∞–ø—É—Å–∫: {env_name} | {config_name} | seed {seed}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏
    run_name = f"{env_name}_{config_name}_seed{seed}"
    
    # –ë–∞–∑–æ–≤—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    base_args = [
        'python', 'main.py',
        f'--env_name={env_name}',
        f'--offline_steps={SERVER_CONFIG["offline_steps"]}',
        '--online_steps=0',
        f'--seed={seed}',
        f'--run_group={exp_group}',
        f'--eval_episodes={SERVER_CONFIG["eval_episodes"]}',
        f'--eval_interval={SERVER_CONFIG["eval_interval"]}',
        f'--log_interval={SERVER_CONFIG["log_interval"]}',
        '--use_wandb=False',  # –û—Ç–∫–ª—é—á–∞–µ–º wandb –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
        f'--agent.batch_size={SERVER_CONFIG["batch_size"]}',
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    base_args.extend(config_args.split())
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
    log_dir = Path(f"quick_test_results_{int(time.time())}")
    log_dir.mkdir(exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    with open(log_dir / f"{run_name}.log", 'w') as f:
        process = subprocess.Popen(
            base_args,
            stdout=f,
            stderr=subprocess.STDOUT,
            cwd='.'
        )
    
    return process

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç FQL —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π GPU")
    print("=" * 50)
    print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞:")
    print(f"  - –ò—Ç–µ—Ä–∞—Ü–∏–π: {SERVER_CONFIG['offline_steps']:,}")
    print(f"  - Batch size: {SERVER_CONFIG['batch_size']}")
    print(f"  - –°–∏–¥–æ–≤: {SERVER_CONFIG['num_seeds']}")
    print(f"  - –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {SERVER_CONFIG['max_parallel']}")
    print()
    
    # –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GPU
    gpu_config = get_gpu_optimized_config()
    gpu_args = ' '.join([f'--agent.{k}={v}' for k, v in gpu_config.items()])
    
    # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã
    experiments = [
        {
            'env': 'antmaze-large-play-v2',
            'group': 'QuickTest_AntMaze',
            'alpha': '3',
            'extra_args': '--agent.q_agg=min'
        },
        {
            'env': 'puzzle-3x3-play-singletask-v0', 
            'group': 'QuickTest_Puzzle',
            'alpha': '100',
            'extra_args': ''
        }
    ]
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_configs = {
        'baseline': f'--agent.kl_coeff=0.0 --agent.advantage_weighted=False',
        'kl_awfm': f'--agent.kl_coeff=0.3 --agent.advantage_weighted=True --agent.adv_weight_coeff=1.0',
    }
    
    processes = []
    
    for exp in experiments:
        print(f"üî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {exp['env']}")
        print(f"   Alpha: {exp['alpha']}")
        
        for config_name, config_base in test_configs.items():
            # –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
            full_config = f"{config_base} --agent.alpha={exp['alpha']} {exp['extra_args']} {gpu_args}"
            
            for seed in range(SERVER_CONFIG['num_seeds']):
                # –ñ–¥–µ–º –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                while len([p for p in processes if p.poll() is None]) >= SERVER_CONFIG['max_parallel']:
                    time.sleep(5)
                    # –û—á–∏—â–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
                    processes = [p for p in processes if p.poll() is None]
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å
                process = run_experiment(
                    exp['env'],
                    config_name,
                    full_config,
                    seed,
                    exp['group']
                )
                processes.append(process)
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
                time.sleep(2)
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤...")
    for process in processes:
        process.wait()
    
    print("\n‚úÖ –í—Å–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\nüìä –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤ exp/fql/QuickTest_*/")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CSV –ª–æ–≥–∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤")
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ GPU:")
    print(f"   - Batch size —É–≤–µ–ª–∏—á–µ–Ω –¥–æ {SERVER_CONFIG['batch_size']} –¥–ª—è –ª—É—á—à–µ–π –∑–∞–≥—Ä—É–∑–∫–∏")
    print("   - –°–æ–∫—Ä–∞—â–µ–Ω—ã —Ä–∞–∑–º–µ—Ä—ã —Å–µ—Ç–µ–π –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏")
    print("   - –£–º–µ–Ω—å—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ flow steps –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏")

if __name__ == "__main__":
    main() 